input_datetime:
  girls_wakeup_time:
    name: Girls Wakeup Time
    has_time: true

input_boolean:
  nap_mode:
    name: Nap Mode
    icon: mdi:sleep
  girls_home_override:
    name: Girls Home Override
    icon: mdi:home-heart

homeassistant:
  customize:
    input_boolean.quite_mode:
      device_class: sound
    binary_sensor.nursery_door:
      device_class: door
    input_boolean.girls_home_override:
      device_class: presence

timer:
  girls_lights_off:
    name: Turn off Girls lights
    duration: 00:10:00
    restore: true

scene:
  - name: nursery_led_on
    entities:
      light.nursery_led:
        state: "on"
        brightness: 254
        color_temp: 311

  - name: nursery_led_on_low
    entities:
      light.nursery_led:
        state: "on"
        brightness: 203
        rgb_color: [255, 127, 0]

  - name: baby_nap_on
    entities:
      switch.nursery_white_noise:
        state: "on"
      light.nursery_led:
        state: "off"
      light.nursery_light:
        state: "off"
      fan.nursery_humidifier:
        state: "on"

  - name: baby_nap_off
    entities:
      switch.nursery_white_noise:
        state: "off"
      fan.nursery:
        state: "off"
      fan.nursery_humidifier:
        state: "off"
      switch.nursery_power_loss_gate:
        state: "on"

script:
  led_strip_on:
    alias: Turn on LED Strip
    mode: restart
    sequence:
      - service: light.turn_on
        entity_id: light.nursery_led
      - wait_template: '{{ is_state("light.nursery_led", "on") }}'
      - service: scene.turn_on
        data:
          entity_id: "{{ scene_id }}"

automation:
  - alias: Nap Mode Button Toggle
    id: nursery_nap_mode_toggle
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: sensor.nap_mode_control_action
        to: "single"
    action:
      - service: homeassistant.toggle
        entity_id:
          - input_boolean.nap_mode
      - delay:
          seconds: 1

  - alias: Nursery LED On
    mode: single
    max_exceeded: silent
    id: nursery_led_on
    trigger:
      - platform: state
        entity_id: sensor.nursery_led_control_action
        to: "on"
    action:
      - service: homeassistant.turn_on
        entity_id: switch.nursery_power_loss_gate
      - wait_template: '{{ not is_state("light.nursery_led", "unavailable") }}'
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.nap_mode
                state: "off"
            sequence:
              - service: script.led_strip_on
                data:
                  scene_id: scene.nursery_led_on
          - conditions:
              - condition: state
                entity_id: input_boolean.nap_mode
                state: "on"
            sequence:
              - service: script.led_strip_on
                data:
                  scene_id: scene.nursery_led_on_low

  - alias: Nursery LED Off
    id: nursery_led_off
    trigger:
      - platform: state
        entity_id: sensor.nursery_led_control_action
        to: "off"
      - platform: sun
        event: sunrise
        offset: "+02:00:00"
    action:
      - wait_template: '{{ not is_state("light.nursery_led", "unavailable") }}'
      - service: light.turn_off
        data:
          entity_id:
            - light.nursery_led

  - alias: Set Nap Accessories
    id: nursery_set_nap_accessories
    trigger:
      platform: state
      entity_id: input_boolean.nap_mode
    action:
      - choose:
          # Turning nap on
          - conditions:
              - condition: state
                entity_id: input_boolean.nap_mode
                state: "on"
            sequence:
              - service: scene.turn_on
                entity_id: scene.baby_nap_on
              - service: media_player.volume_set
                data:
                  volume_level: 0.15
                entity_id: media_player.sonos_living_room
          # Turning nap off
          - conditions:
              - condition: state
                entity_id: input_boolean.nap_mode
                state: "off"
            sequence:
              - choose:
                  - conditions:
                      - condition: time
                        after: "17:00:00"
                        before: "08:30:00"
                    sequence:
                      - service: scene.turn_on
                        entity_id: scene.baby_nap_off
                      - service: script.led_strip_on
                        data:
                          scene_id: scene.nursery_led_on
                default:
                  - service: scene.turn_on
                    entity_id: scene.baby_nap_off
                  - service: homeassistant.turn_on
                    entity_id: light.nursery_light

  - alias: Nursery Humidifier on evenings
    id: nursery_humidifer_evenings
    trigger:
      - platform: state
        entity_id: input_boolean.nap_mode
        from: "off"
        to: "on"
        id: manual_on
      - platform: time
        at: "19:00:00"
        id: early_on
    condition:
      or:
        - condition: trigger
          id: manual_on
        - and:
            - condition: trigger
              id: early_on
            - condition: state
              entity_id: group.adults
              state: "home"
    action:
      - service: homeassistant.turn_on
        entity_id: fan.nursery_humidifier

  - alias: Nursery Fan On if needed
    id: nursery_fan_temperature_conditional
    trigger:
      - platform: state
        entity_id: input_boolean.nap_mode
        to: "on"
        id: force_on
      - platform: time
        at: "15:00:00"
      - platform: time
        at: "17:00:00"
    condition:
      - or:
          - not:
              - condition: state
                entity_id: alarm_control_panel.alarmo
                state: "armed_vacation"
          - condition: state
            entity_id: device_tracker.faux_girls_home
            state: "home"
      - or:
          - condition: numeric_state
            entity_id: weather.tomorrow_io_home_nowcast
            attribute: temperature
            above: 20
          - condition: numeric_state
            entity_id: sensor.girls_room_temperature #Acutal Room Temp
            above: 22
    action:
      - choose:
          # Manual trigger always turns on.
          - conditions:
              - condition: trigger
                id: force_on
            sequence:
              service: homeassistant.turn_on
              entity_id: fan.nursery
          # If not a workday or override is set on
          - conditions:
              - or:
                  - condition: state
                    entity_id: binary_sensor.workday_sensor
                    state: "off"
                  - condition: state
                    entity_id: input_boolean.girls_home_override
                    state: "home"
                  - condition: time
                    after: "14:00:00"
            sequence:
              service: homeassistant.turn_on
              entity_id: fan.nursery

  - alias: Nursery Fan on if temperature rises
    id: nursery_fan_temperature_rise_conditional
    trigger:
      platform: numeric_state
      entity_id: sensor.girls_room_temperature
      above: 23
    condition:
      - condition: state
        entity_id: input_boolean.nap_mode
        state: "on"
      - condition: state
        entity_id: fan.nursery
        state: "off"
    action:
      - service: homeassistant.turn_on
        entity_id: fan.nursery

  - alias: Nursery Low Temperature Fan Off
    id: nursery_low_temp_fan_off
    trigger:
      - platform: numeric_state
        entity_id: sensor.girls_room_temperature
        below: 21
    action:
      - service: homeassistant.turn_off
        entity_id: fan.nursery

  - alias: Nursery Temperature Warning
    id: nursery_temp_warning
    trigger:
      - platform: numeric_state
        entity_id: sensor.girls_room_temperature
        below: 17
        for:
          minutes: 30
      - platform: numeric_state
        entity_id: sensor.girls_room_temperature
        above: 25
        for:
          minutes: 10
    condition:
      - condition: state
        entity_id: input_boolean.nap_mode
        state: "on"
    action:
      - repeat:
          for_each: >
            {{ states.person | selectattr('state', 'eq', 'home') | map(attribute='attributes.notifier') | list}}
          sequence:
            - service: "{{ repeat.item }}"
              data:
                title: "Nursery Temperature Warning"
                message: >
                  Temperature {% if trigger.below != None %}Low{% else %}High{% endif %}: {{ trigger.to_state.state }}
                data:
                  url: /lovelace/girls-room
                  clickAction: /lovelace/girls-room
                  tag: "nursery-temp-warning"
                  group: "nursery-notification"

  - alias: Turn nursery off if forgotten
    id: nursery_off_if_forgotten
    mode: queued
    max: 15
    trigger:
      - platform: template
        value_template: "{{ is_state('binary_sensor.girls_room_camera_motion', 'off') and is_state('binary_sensor.girls_room_occupancy', 'off') }}"
        id: timer_start
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.girls_lights_off
        id: timer_finished
    condition:
      - condition: state
        entity_id: input_boolean.nap_mode
        state: "off"
      - condition: time
        before: "18:00:00"
    action:
      - choose:
          - conditions:
              - condition: trigger
                id: timer_start
            sequence:
              - service: timer.start
                entity_id: timer.girls_lights_off
          - conditions:
              - condition: trigger
                id: timer_finished
              - or:
                  - condition: state
                    entity_id: light.nursery_light
                    state: "on"
                  - condition: state
                    entity_id: light.nursery_led
                    state: "on"
            sequence:
              - service: light.turn_on
                entity_id: light.nursery_led
              - delay: 10
              - service: light.turn_off
                entity_id: light.nursery_light
              - delay: 30
              - service: light.turn_off
                entity_id: light.nursery_led

  - alias: Turn off nursery accessories if forgotten
    id: nursery_turn_off_white_noise_forgotten
    trigger:
      - platform: state
        entity_id:
          - switch.nursery_white_noise
          - fan.nursery_humidifier
          - switch.nursery
        to: "on"
        for:
          minutes: 30
    condition:
      - condition: time
        before: "17:00:00"
      - condition: state
        entity_id: switch.nap_mode
        state: "off"
    action:
      - service: homeassistant.turn_off
        target:
          entity_id: "{{ trigger.entity_id }}"

  - alias: Turn off nap mode via light switch
    id: nursery_nap_off_via_lightswitch
    trigger:
      - platform: state
        entity_id: light.nursery_light
        from: "off"
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.nap_mode
        state: "on"
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.nap_mode

  - alias: Notify if door left open during nap
    id: nursery_nap_on_door_open
    trigger:
      - platform: state
        entity_id: binary_sensor.nursery_door
        to: "on"
        for:
          minutes: 5
        id: left_open
      - platform: state
        entity_id: binary_sensor.nursery_door
        to: "off"
        for:
          minutes: 5
    condition:
      - condition: state
        entity_id: input_boolean.nap_mode
        state: "on"
      - not:
          - condition: time
            after: "01:30:00"
            before: "07:00:00"
    action:
      - if:
          - condition: trigger
            id: left_open
        then:
          - repeat:
              for_each: >
                {{ states.person | selectattr('state', 'eq', 'home') | map(attribute='attributes.notifier') | list}}
              sequence:
                - service: "{{ repeat.item }}"
                  data:
                    title: "Nursery Door Left Open"
                    message: "Door is Open"
                    data:
                      url: /lovelace/girls-room
                      clickAction: /lovelace/girls-room
                      tag: "nursery-door-open-warning"
                      group: "nursery-notification"
        else:
          - service: notify.adults
            data:
              message: "clear_notification"
              data:
                tag: "nursery-door-open-warning"

  - alias: Quiet mode control
    id: nursery_quite_mode_control
    trigger:
      - platform: time
        at: "19:00:00"
        id: quite_on
      - platform: state
        entity_id: input_boolean.nap_mode
        to: "on"
        id: quite_on
      - platform: time
        at: "08:00:00"
        id: quite_off
      - platform: state
        entity_id: input_boolean.nap_mode
        to: "off"
        id: quite_off
      - platform: state
        entity_id: light.nursery_led
        to: ~
        id: led_control
    action:
      - choose:
          - conditions:
              - condition: trigger
                id: quite_on
            sequence:
              - service: homeassistant.turn_on
                entity_id: input_boolean.quite_mode
          - conditions:
              - condition: trigger
                id: quite_off
            sequence:
              - service: homeassistant.turn_off
                entity_id: input_boolean.quite_mode
          - conditions:
              - condition: trigger
                id: led_control
              - condition: time
                after: "18:30:00"
              - condition: template
                value_template: "{{ trigger.to_state.state in ['off', 'on'] }}"
            sequence:
              - service: homeassistant.turn_{{ trigger.to_state.state }}
                entity_id: input_boolean.quite_mode

  - alias: Turn on nap mode if forgotten
    id: nursery_nap_mode_on_forgotten
    trigger:
      - platform: state
        entity_id: binary_sensor.nursery_door
        to: "off"
        for:
          minutes: 1
    condition:
      # Bedtime
      - condition: time
        after: "19:00:00"
      - condition: state
        entity_id: light.nursery_light
        state: "off"
    action:
      - service: homeassistant.turn_on
        entity_id: input_boolean.nap_mode

  - alias: Nursey Door Open During Sleep
    id: nursery_door_open_during_sleep
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: binary_sensor.nursery_door
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.nap_mode
        state: "on"
        for:
          minutes: 10
      - condition: state
        entity_id: group.adults
        state: "home"
      - not:
          - condition: time
            after: "01:30:00"
            before: "07:00:00"
    action:
      - repeat:
          for_each: >
            {{ states.person | selectattr('state', 'eq', 'home') | map(attribute='attributes.notifier') | list}}
          sequence:
            - service: "{{ repeat.item }}"
              data:
                title: "Nursery Door Opened!"
                message: >
                  Someone has left the nursery
                data:
                  url: /lovelace/girls-room
                  clickAction: /lovelace/girls-room
                  tag: "nursery-escape-warning"
                  group: "nursery-notification"
      - choose:
          - conditions:
              - condition: state
                entity_id: media_player.apple_tv_living_room
                state: "playing"
            sequence:
              - service: media_player.media_pause
                entity_id: media_player.apple_tv_living_room
      - delay:
          # Debounce this from happening
          # again quickly.
          minutes: 3

  - alias: Set the girls wakeup time
    id: nursery_set_girls_wakeup_time
    trigger:
      - platform: time
        at: "09:00:00"
    action:
      - service: calendar.get_events
        target:
          entity_id: calendar.ontario_holidays
        data:
          duration:
            hours: 24
        response_variable: holidays
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.girls_wakeup_time
        data:
          time: >
            {%- if holidays["calendar.ontario_holidays"]["events"]| count > 0 -%}
              07:30:00
            {%- elif (now() + timedelta(hours=24)).weekday() in [6, 7] -%}
              07:30:00
            {%- else -%}
              07:00:00
            {%- endif -%}

  - alias: Let the girls out of bed
    id: nursery_let_girls_out_of_bed_time_trigger
    trigger:
      - platform: time
        at: input_datetime.girls_wakeup_time
    condition:
      - or:
          - condition: state
            entity_id: group.adults
            state: "home"
          - condition: state
            entity_id: binary_sensor.guests_present
            state: "on"
    action:
      - wait_template: '{{ not is_state("light.nursery_led", "unavailable") }}'
      - service: script.led_strip_on
        data:
          scene_id: scene.nursery_led_on

  - alias: Reenable nursery light on power loss
    id: nusery_led_strip_reenable
    trigger:
      - platform: state
        entity_id: sensor.backupsxs1300g_status
        from: "Online"
      - platform: state
        entity_id: input_boolean.nap_mode
        to: "off"
        from: "on"
      - platform: time
        at:
          - input_datetime.girls_wakeup_time
          - "18:30:00" # On for bedtime
    action:
      # Wait for the switch we want to turn on to be available
      - wait_template: '{{ not is_state("switch.nursery_power_loss_gate", "unavailable") }}'
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.nap_mode
                state: "off"
            sequence:
              - service: homeassistant.turn_on
                entity_id: switch.nursery_power_loss_gate
          - conditions:
              - condition: state
                entity_id: input_boolean.nap_mode
                state: "on"
              - condition: time
                after: "07:00:00"
                before: "08:00:00"
            sequence:
              - service: homeassistant.turn_on
                entity_id: switch.nursery_power_loss_gate

  - alias: Show Nursery Camera on TV automatically
    id: nursery_show_camera_automatically
    trigger:
      - platform: state
        entity_id: input_boolean.nap_mode
        to: "on"
    condition:
      not:
        - condition: state
          entity_id: media_player.apple_tv_living_room
          state: "playing"
    action:
      - service: switch.turn_on
        entity_id: switch.entertainment_switch_relay
      - service: homeassistant.turn_on
        entity_id: remote.apple_tv_living_room
      - service: remote.send_command
        target:
          entity_id: remote.apple_tv_living_room
        data:
          command: "wakeup"
      - delay:
          seconds: 30
      - event: homekit_faux_camera_event
      - delay:
          seconds: 5
      - service: remote.send_command
        target:
          entity_id: remote.apple_tv_living_room
        data:
          command: "home"

  - alias: Set living room lighting when bedtime starts
    id: nursery_turn_on_kitchen_lighting
    trigger:
      - platform: state
        entity_id: input_boolean.nap_mode
        to: "on"
    condition:
      - condition: time
        after: "18:00:00"
    action:
      - service: light.turn_on
        entity_id:
          - light.kitchen_island
      - service: light.turn_off
        target:
          entity_id:
            - light.living_room_light
            - light.kitchen_light
        data:
          transition: 90

  - alias: Girls Light Control
    id: nursery_girls_light_control
    trigger:
      - platform: state
        entity_id: sensor.nursery_light_control_action
        to: "single"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.nap_mode
                state: "off"
              - condition: time
                before: "19:15:00"
            sequence:
              - service: homeassistant.toggle
                entity_id: light.nursery_light
              - service: light.turn_off
                data:
                  entity_id:
                    - light.nursery_led
        default:
          - service: light.toggle
            data:
              entity_id:
                - light.nursery_led
          - service: homeassistant.turn_off
            entity_id: light.nursery_light

  - alias: Set warmer temperature for LED strip
    id: nursery_warmer_temp_led
    trigger:
      - platform: time
        at: "19:00:00"
      - platform: state
        entity_id: light.nursery_led
        to: "on"
    condition:
      - condition: time
        after: "18:00:00"
        before: "21:00:00"
      - condition: state
        entity_id: light.nursery_led
        state: "on"
    action:
      - service: light.turn_on
        target:
          entity_id: light.nursery_led
        data:
          brightness: 254
          color_temp_kelvin: 2000

  - alias: Turn on LED strip for bedtime routine
    id: nursery_led_on_bedtime_routine
    trigger:
      - platform: state
        entity_id: light.nursery_light
        to: "on"
    condition:
      - condition: time
        after: "18:00:00"
    action:
      - service: light.turn_on
        data:
          entity_id:
            - light.nursery_led
      - service: scene.turn_on
        entity_id: scene.nursery_led_on
      - delay:
          seconds: 1

  - alias: Girls Bathroom Night Light
    id: nursery_bathroom_night_light
    trigger:
      # turn on triggers
      - platform: sun
        event: sunset
        id: turn_on
      - platform: numeric_state
        entity_id: sun.sun
        attribute: elevation
        below: 2.0
        id: turn_on
      - platform: state
        entity_id: group.adults
        from: "not_home"
        to: "home"
        id: turn_on
      - platform: state
        entity_id:
          - binary_sensor.nursery_door
          - binary_sensor.bathroom_night_light_occupancy
          - input_boolean.nap_mode
        to: "on"
        id: turn_on
      - platform: state
        entity_id: input_boolean.nap_mode
        to: "on"
        id: turn_on
      # turn off triggers
      - platform: numeric_state
        entity_id: sun.sun
        attribute: elevation
        above: 2.0
        id: turn_off
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sun.sun
                attribute: elevation
                below: 2.0
              - condition: trigger
                id: turn_on
            sequence:
              - service: light.turn_on
                target:
                  entity_id: light.bathroom_night_light
                data:
                  brightness_pct: 20
                  rgb_color: [255, 164, 8]
          - conditions:
              - condition: trigger
                id: turn_off
            sequence:
              - wait_template: '{{ is_state("binary_sensor.bathroom_night_light_occupancy", "off") }}'
              - service: light.turn_off
                target:
                  entity_id: light.bathroom_night_light

  - alias: Control hall lights at bedtime
    id: girls_control_hall_lights_bedtime
    mode: single
    max_exceeded: silent
    trigger:
      - platform: state
        entity_id: input_boolean.nap_mode
        to: "on"
    action:
      - service: light.turn_off
        entity_id: light.upstairs_hall
      - if:
          - condition: numeric_state
            entity_id: sun.sun
            attribute: elevation
            below: 4.0
        then:
          - service: light.turn_on
            entity_id: light.main_stairs
        else:
          - service: light.turn_off
            entity_id: light.main_stairs

  - alias: Turn off hall lights door open
    id: girls_hall_lights_off_door_open
    mode: single
    max_exceeded: silent
    trigger:
      # Stair Light off
      - platform: state
        entity_id: binary_sensor.nursery_door
        to: "on" # Door Open
        id: lights_off
      - platform: time
        at: "21:00:00"
        id: lights_off
      # Stair Light on, door closed
      - platform: state
        entity_id: binary_sensor.nursery_door
        to: "off" # Door closed
        id: lights_on
    condition:
      - condition: state
        entity_id: input_boolean.nap_mode
        state: "on"
    action:
      - choose:
          - conditions:
              - condition: trigger
                id: lights_off
            sequence:
              - service: light.turn_off
                entity_id:
                  - light.main_stairs
                  - light.upstairs_hall
          - conditions:
              - condition: trigger
                id: lights_on
              - condition: time
                after: "18:30:00"
                before: "21:00:00"
            sequence:
              - delay:
                  seconds: 5
              - service: light.turn_on
                entity_id: light.main_stairs
