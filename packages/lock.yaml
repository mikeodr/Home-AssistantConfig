binary_sensor:
  - platform: template
    sensors:
      lock_jammed:
        friendly_name: "Front Lock Jammed"
        value_template: "{{ is_state('sensor.front_door_lock_alarm_access_control', 'Lock Jammed') }}"
        delay_on:
          seconds: 10

automation:
  - alias: Lock Status Change
    id: lock_status_change
    trigger:
      - platform: event
        event_type: zwave_js_notification
        event_data:
          command_class: 113
          type: 6
          event: 6
    condition:
      - condition: state
        entity_id: person.mike
        state: "not_home"
    action:
      service: notify.mobile_app_michaels_iphone
      data:
        title: "Lock Event"
        message: >
          {% set user_slot = trigger.event.data.parameters.userId %}
          {% if user_slot == 1 %}
          {% set user = "Mike" %}
          {% elif user_slot == 2 %}
          {% set user = "Dad" %}
          {% elif user_slot == 3 %}
          {% set user = "Brendan" %}
          {% elif user_slot == 4 %}
          {% set user = "Tiff" %}
          {% elif user_slot == 5 %}
          {% set user = "Lisa" %}
          {% elif user_slot == 15 %}
          {% set user = "Cleaners" %}
          {% endif %}
          Unlocked{% if user is defined %} by {{user}}{% endif %}
      #{{ trigger.to_state.attributes.friendly_name }} is {{ trigger.to_state.state }}{% if user is defined %} by {{user}}{% endif %}

  - alias: Secure House Evenings
    id: lock_secure_house_evenings
    trigger:
      - platform: time
        at: "22:30:00"
      - platform: state
        entity_id:
          - lock.locks
        to: "unlocked"
        for:
          minutes: 5
    condition:
      condition: time
      after: "22:25:00"
      before: "07:00:00"
    action:
      - parallel:
          - sequence:
              - wait_template: "{{ is_state('binary_sensor.front_door', 'off') }}"
              - service: lock.lock
                entity_id: lock.front_door
          - sequence:
              - wait_template: "{{ is_state('binary_sensor.side_door_open', 'off') }}"
              - service: lock.lock
                entity_id: lock.side_door

  - alias: Enable Cleaners Lock Code
    id: lock_enable_cleaner_code
    mode: queued
    trigger:
      - platform: calendar
        event: start
        entity_id: calendar.house_planning
        offset: "-03:00:00"
        id: set_lock
      - platform: calendar
        event: start
        entity_id: calendar.house_planning
        id: set_lock
      - platform: calendar
        event: end
        entity_id: calendar.house_planning
        id: clear_lock
    condition:
      - condition: template
        value_template: "{{ 'Cleaners' in trigger.calendar_event.summary}}"
    action:
      choose:
        - conditions:
            - condition: trigger
              id: set_lock
          sequence:
            - service: zwave_js.set_lock_usercode
              data:
                code_slot: "15"
                usercode: !secret cleaners_door_code
              entity_id: lock.front_door
            - service: notify.mobile_app_michaels_iphone
              data:
                message: "Setting cleaners lock code"
                data:
                  tag: "cleaners-code"
            - service: alarm_control_panel.alarm_disarm
              target:
                entity_id: alarm_control_panel.master
        - conditions:
            - condition: trigger
              id: clear_lock
          sequence:
            - service: zwave_js.clear_lock_usercode
              data:
                code_slot: "15"
              entity_id: lock.front_door
            - service: notify.mobile_app_michaels_iphone
              data:
                message: "Clearing cleaners lock code"
                data:
                  tag: "cleaners-code"
            - choose:
                - conditions:
                    - condition: state
                      entity_id: group.presence_home
                      state: "not_home"
                  sequence:
                    - if:
                        - condition: numeric_state
                          entity_id: sensor.home_nearest_distance
                          above: 55000
                      then:
                        - service: alarm_control_panel.alarm_arm_vacation
                          target:
                            entity_id: alarm_control_panel.master
                      else:
                        - service: alarm_control_panel.alarm_arm_away
                          target:
                            entity_id: alarm_control_panel.master

  - alias: Lock doors when nearby but not on wifi
    id: lock_secure_house_nearby_but_offline
    trigger:
      - platform: state
        entity_id:
          - device_tracker.mikeiphone14_unifi
          - device_tracker.tiffanys_iphone_unifi
        to: "not_home"
        for:
          minutes: 10
    condition:
      - condition: state
        entity_id: group.adults
        state: "home"
      - condition: state
        entity_id:
          - device_tracker.mikeiphone14_unifi
          - device_tracker.tiffanys_iphone_unifi
        state: "not_home"
      - condition: state
        entity_id: lock.locks
        state: "unlocked"
    action:
      - service: notify.mobile_app_michaels_iphone
        data:
          message: "Wifi Auto Lock Triggered"
      - service: lock.lock
        entity_id: lock.locks
