binary_sensor:
  - platform: template
    sensors:
      lock_jammed:
        friendly_name: "Front Lock Jammed"
        value_template: "{{ is_state('sensor.front_door_lock_alarm_access_control', 'Lock Jammed') }}"
        delay_on:
          seconds: 10

alert:
  lock_jammed:
    name: Front lock jammed
    done_message: Lock OK!
    entity_id: binary_sensor.lock_jammed
    state: "Lock Jammed"
    can_acknowledge: true
    repeat: 5
    data:
      url: /lovelace/leak-sensors
      push:
        category: "lock_jammed"
        sound:
          critical: 1
          volume: 1.0
    notifiers:
      - mobile_app_michaels_iphone

automation:
  - alias: Lock Status Change
    trigger:
        - platform: state
          entity_id: lock.front_door
          from: 'unlocked'
          to: 'locked'
        - platform: state
          entity_id: lock.front_door
          from: 'locked'
          to: 'unlocked'
    condition:
      - condition: state
        entity_id: person.mike
        state: 'not_home'
    action:
      service: notify.mobile_app_michaels_iphone
      data:
        title: "Front Lock"
        message: >
          {% set user_slot = states("sensor.front_door_lock_last_user_code") %}
          {% if user_slot == "1" %}
          {% set user = "Mike" %}
          {% elif user_slot == "2" %}
          {% set user = "Dad" %}
          {% elif user_slot == "3" %}
          {% set user = "Brendan" %}
          {% elif user_slot == "4" %}
          {% set user = "Tiff" %}
          {% elif user_slot == "5" %}
          {% set user = "Lisa" %}
          {% elif user_slot == "15" %}
          {% set user = "Cleaners" %}
          {% endif %}
          {{ trigger.to_state.attributes.friendly_name }} is {{ trigger.to_state.state }}{% if user is defined %} by {{user}}{% endif %}

  - alias: Secure House Evenings
    trigger:
      - platform: time
        at: '22:00:00'
    action:
      - service: cover.close_cover
        entity_id: cover.garage
      - service: lock.lock
        entity_id: lock.front_door

  - alias: Enable Cleaners Lock Code
    trigger:
      - platform: template
        value_template: "{{ state_attr('calendar.house_planning', 'offset_reached') }}"
    action:
      - service: mqtt.publish
        data:
          topic: zwave2mqtt/4/99/1/16/set
          payload: !secret cleaners_door_code_json
      - service: notify.mobile_app_michaels_iphone
        data:
          message: "Setting cleaners lock code"

  - alias: Cleaners Clear Code
    trigger:
      - platform: state
        entity_id: calendar.house_planning
        to: 'off'
    action:
      - service: mqtt.publish
        data:
          topic: zwave2mqtt/4/99/1/256/set
          payload: "{\"value\": 16}"
      - service: notify.mobile_app_michaels_iphone
        data:
          message: "Clearing cleaners lock code"