automation:
  - alias: "Faux device tracker for twins"
    id: alarm_device_tracker_for_twins
    trigger:
      - platform: state
        entity_id: input_boolean.girls_home_override
        to: ~
    condition:
      condition: template
      value_template: "{{ trigger.to_state.state in ['off', 'on'] }}"
    action:
      - service: device_tracker.see
        data_template:
          dev_id: faux_girls_home
          location_name: "{{ 'home' if 'on' == trigger.to_state.state else 'not_home' }}"
    mode: single
    max_exceeded: silent

  - alias: Auto Arm and Disarm System
    id: alarm_arm_based_on_presence
    trigger:
      - platform: state
        entity_id:
          - group.presence_home
        to: ~
    condition:
      - condition: template
        value_template: "{{ trigger.to_state.state in ['home', 'not_home'] }}"
      - condition: state
        entity_id: binary_sensor.guests_present
        state: "off"
    action:
      - service: alarm_control_panel.alarm_{{ 'disarm' if 'home' == trigger.to_state.state else 'arm_away' }}
        target:
          entity_id: alarm_control_panel.alarmo
      - if:
          - condition: template
            value_template: "{{ trigger.to_state.state  == 'home' }}"
        then:
          - service: select.select_option
            entity_id: select.my_ecobee_current_mode
            data:
              option: home
    mode: single
    max_exceeded: silent

  - alias: Auto Arm Alarm Night
    id: alarm_auto_arm_night_mode
    trigger:
      - platform: time
        at: "00:00:00"
      - platform: time
        at: "01:00:00"
    condition:
      - condition: state
        entity_id:
          - person.mike
          - person.tiff
        state: "home"
      - condition: state
        entity_id: alarm_control_panel.alarmo
        state: "disarmed"
      - condition: state
        entity_id: media_player.living_room_tv
        state: "off"
    action:
      - service: alarm_control_panel.alarm_arm_night
        target:
          entity_id: alarm_control_panel.alarmo

  - alias: Disable Armed Night on iOS alarm wakeup
    id: alarm_disable_armed_night_ios_wakeup
    trigger:
      - platform: event
        event_type: "ios_wakeup_event"
    condition:
      - condition: state
        entity_id: alarm_control_panel.alarmo
        state: "armed_night"
    action:
      - service: alarm_control_panel.alarm_disarm
        target:
          entity_id: alarm_control_panel.alarmo

  - alias: iOS Alarm Away
    id: alarm_ios_alarm_arm_away
    trigger:
      - platform: event
        event_type: ios.action_fired
        event_data:
          actionID: alarm_arm_away
    action:
      - service: alarm_control_panel.alarm_arm_away
        target:
          entity_id: alarm_control_panel.alarmo

  - alias: iOS Alarm Disarm
    id: alarm_ios_alarm_arm_disarm
    trigger:
      - platform: event
        event_type: ios.action_fired
        event_data:
          actionID: alarm_disarm
    action:
      - service: alarm_control_panel.alarm_disarm
        target:
          entity_id: alarm_control_panel.alarmo

  - alias: Lock all doors when alarm armed
    id: alarm_lock_all_doors_armed
    trigger:
      - platform: state
        entity_id: alarm_control_panel.alarmo
        to:
          - arming
          - armed_night
          - armed_vacation
          - armed_away
    action:
      - service: lock.lock
        entity_id:
          - lock.front_door
          - lock.side_door

  - alias: Alert armed state and garage open
    id: alarm_alert_garage_left_open
    trigger:
      - platform: state
        entity_id: alarm_control_panel.alarmo
        to:
          - arming
          - armed_night
          - armed_vacation
          - armed_away
    condition:
      - condition: state
        entity_id: cover.garage
        state: "open"
    action:
      # Snapshot the camera
      - service: camera.snapshot
        continue_on_error: true
        target:
          entity_id: camera.garage_low
        data:
          filename: "/media/garage/snapshot.jpg"
      - service: notify.mobile_app_michaels_iphone
        data:
          message: "ðŸšª Garage Door Left Open ðŸšª"
          data:
            image: "/media/local/garage/snapshot.jpg"
            tag: "alarmo-garage-open-alert"
            actions:
              - action: "CLOSE_GARAGE"
                title: "Close Garage"
                activationMode: "background"
                authenticationRequired: true
                destructive: true
                behavior: "default"
            push:
              sound:
                name: "default"
                critical: 1
                volume: 1.0

  - alias: Turn on indoor lights when triggered at night
    id: alarm_lights_on_triggered_night
    trigger:
      - platform: state
        entity_id: alarm_control_panel.alarmo
        from: armed_night
        to: triggered
    action:
      - service: light.turn_on
        target:
          floor_id:
            - basement
            - main_floor

  - alias: Turn off all indoor lights when armed
    id: alarm_turn_off_all_lights
    trigger:
      - platform: state
        entity_id: alarm_control_panel.alarmo
        to:
          - armed_vacation
          - armed_away
    action:
      - service: light.turn_off
        target:
          floor_id:
            - basement
            - main_floor
            - top_floor

  - alias: Turn off lights at bedtime
    id: alarm_turn_off_lights_bedtime
    trigger:
      - platform: state
        entity_id: alarm_control_panel.alarmo
        to: armed_night
    action:
      - service: light.turn_off
        target:
          floor_id:
            - basement
            - main_floor

  - alias: Set Switch Status LEDs
    id: alarm_set_switch_status_leds
    mode: queued
    max: 10
    trigger:
      - platform: state
        entity_id:
          - lock.locks
          - cover.garage
          - binary_sensor.doors
        not_from:
          - "unknown"
          - "unavailable"
        to: ~
    condition:
      - condition: state
        entity_id: group.adults
        state: "home"
      - condition: template
        value_template: "{{ has_value('cover.garage') and has_value('lock.locks') and has_value('binary_sensor.doors') }}"
    action:
      - variables:
          duration: >-
            {% if is_state('binary_sensor.doors', 'off') and is_state('cover.garage', 'closed') and is_state('lock.locks', 'locked') %}
              30
            {% else %}
              255
            {% endif %}
          color: >-
            {# red 0, yellow 20, green 85 #}
            {% if is_state('cover.garage', 'closed') and is_state('binary_sensor.doors', 'off') and is_state('lock.locks', 'locked') %}
              85
            {% elif is_state('binary_sensor.doors', 'off') and is_state('cover.garage', 'closed') and is_state('lock.locks', 'unlocked') %}
              20
            {% else %}
              0
            {% endif %}
      - service: script.blue_set_led
        data:
          color: "{{ color }}"
          effect: "solid"
          level: 40
          duration: "{{ duration }}"
          entity_id:
            - light.front_hall
            - light.kitchen_light
            - light.back_deck_light
            - light.main_stairs
            - light.upstairs_hall
            - light.main_bath_light
            - light.basement_stairs
            - light.basement_hall
