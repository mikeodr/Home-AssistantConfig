script:
  toggle_garage:
    alias: "Toggle Garage"
    mode: queued
    icon: "mdi:garage"
    sequence:
      - service: cover.toggle
        entity_id:
          - cover.garage

  lock_door:
    alias: "Lock Door"
    mode: queued
    icon: "mdi:lock"
    sequence:
      - service: lock.lock
        entity_id:
          - lock.front_door

  unlock_door:
    alias: "Unlock Door"
    mode: queued
    icon: "mdi:lock-open"
    sequence:
      - service: lock.unlock
        entity_id:
          - lock.front_door

  alarm_arm_away:
    alias: "Arm Alarm"
    mode: queued
    icon: "mdi:shield-lock"
    sequence:
      - service: alarm_control_panel.alarm_arm_away
        target:
          entity_id: alarm_control_panel.alarmo

  disarm_alarm:
    alias: "Disarm Alarm"
    mode: queued
    icon: "mdi:shield-lock-open"
    sequence:
      - service: alarm_control_panel.alarm_disarm
        target:
          entity_id: alarm_control_panel.alarmo

sensor:
  - platform: template
    sensors:
      ios_main_status_summary:
        friendly_name: "iOS Watch Complication Summary Line"
        unique_id: ios_main_status_summary_line
        value_template: >-
          {%- if is_state("lock.front_door", "locked") and is_state("lock.side_door", "locked") -%}
          🔒
          {%- else -%}
          {%- if is_state("lock.front_door", "locked") -%}
          🔒
          {%- else -%}
          🔓
          {%- endif -%}
          {%- if is_state("lock.side_door", "locked") -%}
          🔒
          {%- else -%}
          🔓
          {%- endif -%}
          {%- endif -%} 
          {%- if is_state("cover.garage", "closed") -%}
          |⬇
          {%- else -%}
          |⬆
          {%- endif -%}
          {%- if is_state("person.mike", 'home') and is_state("person.tiff", 'home') -%}
          |👫
          {%- elif is_state("person.mike", "home") -%}
          |🧍‍♂️
          {%- elif is_state("person.tiff", "home") -%}
          |🧍‍♀️
          {%- endif -%}
          {%- if states("alarm_control_panel.alarmo") not in ['disarmed'] -%}
          {%- if states("alarm_control_panel.alarmo") in ['armed_vacation'] -%}
          |🌴
          {%- else -%}
          |🛡️
          {%- endif -%}
          {%- endif -%}
          {%- if is_state("alarm_control_panel.alarmo", "triggered") -%}
          |🚨
          {%- endif -%}
          {%- if is_state('binary_sensor.waste_dashboard', 'on')  -%}
          {% if 'Garbage' in state_attr('sensor.waste_current_pickup', 'pickup_types') -%}
          |🗑
          {%- else -%}
          |♻
          {%- endif -%}
          {% if 'Yard Waste' in state_attr('sensor.waste_current_pickup', 'pickup_types') -%}
          🍂
          {%- endif -%}
          {%- endif -%}
      ios_main_status_body1:
        friendly_name: "iOS Watch Complication Body 1"
        unique_id: ios_main_status_body1
        value_template: >-
          {%- if states("input_boolean.nap_mode") == 'on' -%}
          😴
          {%- else -%}
          👶
          {%- endif %} {{ states("sensor.girls_room_temperature")}}
          {%- if is_state("climate.my_ecobee", "heat") -%}
          |🔥
          {%- elif is_state("climate.my_ecobee", "cool") -%}
          |❄️
          {%- elif is_state("climate.my_ecobee", "heat_cool") -%}
          |🔄
          {%- else -%}
          |⏹️
          {%- endif %} {{ state_attr('climate.my_ecobee', 'current_temperature') }}
      ios_main_status_body2:
        friendly_name: "iOS Watch Complication Body 2"
        unique_id: ios_main_status_body2
        value_template: >-
          📺{{ states('sensor.mikeflix') }}
          {%- if is_state('binary_sensor.washer_status', 'on') -%}
          |🧺
          {%- endif -%}

automation:
  - alias: Update Complications On Specific State changes
    id: update_complications_state_changes
    triggers:
      - platform: state
        entity_id:
          - cover.garage
          - lock.front_door
          - lock.side_door
          - input_boolean.nap_mode
        to: ~
    actions:
      - service: notify.mobile_app_michaels_iphone
        data:
          message: update_complications
