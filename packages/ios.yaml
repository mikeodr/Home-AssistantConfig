ios:
  actions:
    - name: toggle_garage
      background_color: "#000000"
      icon:
        icon: garage
        color: "#ffffff"
      label:
        text: "Toggle Garage"
        color: "#ffffff"
    - name: lock_door
      background_color: "#000000"
      icon:
        icon: lock
        color: "#ffffff"
      label:
        text: "Lock Door"
        color: "#ffffff"
    - name: unlock_door
      background_color: "#000000"
      icon:
        icon: lock-open
        color: "#ffffff"
      label:
        text: "Unlock Door"
        color: "#ffffff"
    - name: toggle_spare_bedroom_fan
      background_color: "#000000"
      icon:
        icon: fan
        color: "#ffffff"
      label:
        text: "Spare Bedroom Fan"
        color: "#ffffff"

sensor:
  - platform: template
    sensors:
      ios_main_status_summary:
        friendly_name: "iOS Watch Complication Summary Line"
        unique_id: ios_main_status_summary_line
        value_template: >-
          {%- if states("lock.front_door") == "locked" -%}
          üîí
          {%- else -%}
          üîì
          {%- endif -%} 
          {%- if states("cover.garage") == "closed" -%}
          |‚¨á
          {%- else -%}
          |‚¨Ü
          {%- endif -%}
          {%- if states("person.mike") == 'home' and states("person.tiff") == 'home' -%}
          |üë´
          {%- elif states("person.mike") == 'home' -%}
          |üßç‚Äç‚ôÇÔ∏è
          {%- elif states("person.tiff") == 'home' -%}
          |üßç‚Äç‚ôÄÔ∏è
          {%- else -%}
          |üôÖ
          {%- endif -%}
          {% set garbage_day=strptime((states('sensor.recollect_waste') | as_timestamp)|timestamp_local, "%Y-%m-%d %H:%M:%S") -%}
          {%- if now().day == (garbage_day - timedelta(days=1)).day or 
          now().day == garbage_day.day -%}
          {% if 'Garbage' in state_attr('sensor.recollect_waste', 'pickup_types') -%}
          |üóë
          {%- else -%}
          |‚ôª
          {%- endif -%}
          {%- endif -%}
      ios_main_status_body1:
        friendly_name: "iOS Watch Complication Body 1"
        unique_id: ios_main_status_body1
        value_template: >-
          {%- if states("input_boolean.nap_mode") == 'on' -%}
          üò¥
          {%- else -%}
          üë∂
          {%- endif %} {{ states("sensor.kid_s_room_temperature")}}
          {%- if states("climate.my_ecobee") == "heat" -%}
          |üî•
          {%- elif states("climate.my_ecobee") == "cool" -%}
          |‚ùÑÔ∏è
          {%- elif states("climate.my_ecobee") == "heat_cool" -%}
          |üîÑ
          {%- else -%}
          |‚èπÔ∏è
          {%- endif %} {{ state_attr('climate.my_ecobee', 'current_temperature') }}
      ios_main_status_body2:
        friendly_name: "iOS Watch Complication Body 2"
        unique_id: ios_main_status_body2
        value_template: >-
          üì∫{{ states('sensor.plex_mikeflix') }}|{%- if states('sun.sun') == 'above_horizon' -%}
          üåõ{% set sec = (states.sun.sun.attributes.next_setting |as_timestamp - now() |as_timestamp) |int %}
          {%- else -%}
          ‚òÄÔ∏è{% set sec = (states.sun.sun.attributes.next_rising | as_timestamp - now()| as_timestamp) |int %}
          {%- endif -%}
          {{ sec//3600 }}h{{ sec%3600//60 }}m

automation:
  - alias: iOS Toggle Garage
    id: ios_toggle_garage
    trigger:
      platform: event
      event_type: ios.action_fired
      event_data:
        actionID: toggle_garage
        sourceDeviceID: michaels_iphone
    action:
      service: cover.toggle
      entity_id:
        - cover.garage

  - alias: iOS Lock Front Door
    id: ios_lock_front door
    trigger:
      platform: event
      event_type: ios.action_fired
      event_data:
        actionID: lock_door
        sourceDeviceID: michaels_iphone
    action:
      service: lock.lock
      entity_id:
        - lock.front_door

  - alias: iOS Unlock Front Door
    id: ios_unlock_front_door
    trigger:
      platform: event
      event_type: ios.action_fired
      event_data:
        actionID: unlock_door
        sourceDeviceID: michaels_iphone
    action:
      service: lock.unlock
      entity_id:
        - lock.front_door

  - alias: Trigger sensor updates for Tiff's phone during bedtime period
    id: ios_trigger_updates
    trigger:
      platform: time_pattern
      hours: "21"
      minutes: "/5"
    condition:
      - condition: state
        entity_id: person.tiff
        state: "home"
      - condition: time
        after: "21:30"
        before: "22:00"
    action:
      - service: notify.mobile_app_tiffanys_iphone
        data:
          message: "request_location_update"

  - alias: iOS Spare bedroom fan toggle
    id: ios_spare_bedroom_fan_toggle
    trigger:
      - platform: event
        event_type: ios.action_fired
        event_data:
          actionID: toggle_spare_bedroom_fan
    action:
      - service: homeassistant.toggle
        entity_id:
          - switch.spare_bedroom_fan